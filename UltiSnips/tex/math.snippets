# Include this code block at the top of a *.snippets file...
# ----------------------------- #
global !p
def math():
	return vim.eval('vimtex#syntax#in_mathzone()') == '1'
endglobal
# ----------------------------- #
# ...then place 'context "math()"' above any snippets you want to expand only in math mode

context math()
# Prevent fraction expansion in words containing "ff"
snippet "([^a-zA-Z])ff" "\frac{}{}" rA
`!p snip.rv = match.group(1)`\frac{${1:${VISUAL:}}}{$2}$0
endsnippet

context math()
# A command for differentials
snippet "([^a-zA-Z0-9])df" "\diff" rA
`!p snip.rv = match.group(1)`\diff 
endsnippet

context math()
snippet "([^a-zA-Z0-9])sup" "\sup" rA 
`!p snip.rv = match.group(1)`\displaystyle\sup_{$1}
endsnippet 

context math()
snippet "([^a-zA-Z0-9])lim" "limit" rA 
`!p snip.rv = match.group(1)`\displaystyle\lim_{$1}$0
endsnippet

context math()
snippet "([^a-zA-Z0-9])inf" "\inf" rA 
`!p snip.rv = match.group(1)`\displaystyle\inf_{$1}
endsnippet 


context math()
snippet "([^a-zA-Z0-9])lsup" "\limsup" rA 
`!p snip.rv = match.group(1)`\displaystyle\limsup_{$1} 
endsnippet 


context math()
snippet "([^a-zA-Z0-9])linf" "\liminf" rA 
`!p snip.rv = match.group(1)`\displaystyle\liminf_{$1}
endsnippet

context math()
snippet "([^a-zA-Z0-9])LL" "stacked limit" rA 
`!p snip.rv = match.group(1)`\stackrel{n\to \infty}{\longrightarrow}$0
endsnippet






context math()
snippet "([^a-zA-Z0-9])ee" "expectation" rA 
`!p snip.rv = match.group(1)`\mathbb{E}\left[ $1 \right]
endsnippet 


context math()
snippet "([^a-zA-Z0-9])llp" "Lp spaces" rA 
`!p snip.rv = match.group(1)`\mathcal{L}^{p}$0 
endsnippet 


# A command for the integral sign
snippet int "integral displaystyle"
\displaystyle\int^{$1}_{$2}$3 \diff $4 $0 
endsnippet	

# A command for the integral sign
snippet ints "integral"
\int^{$1}_{$2}$3 \diff $4 $0 
endsnippet

snippet "([^a-zA-Z])summ" "Big sum" rA
\displaystyle\sum^{$1}_{$2}$0 
endsnippet

snippet "([^a-zA-Z])cupp" "Big union" rA
\displaystyle\bigcup^{$1}_{$2}$0 
endsnippet

snippet "([^a-zA-Z])capp" "Big intersection" rA
\displaystyle\bigcap^{$1}_{$2}$0 
endsnippet

snippet "([^a-zA-Z])obr" "overbrace" rA
\displaystyle\overbrace{$1}^{$2}$0 
endsnippet

snippet "([^a-zA-Z])ubr" "underbrace" rA
\displaystyle\underbrace{$1}_{$2}$0 
endsnippet

snippet "([^a-zA-Z])II" "absolute value" rA
| $1|$0 
endsnippet


context "math()"
snippet "([^a-zA-Z])cc" "subseteq" rA
\subseteq 
endsnippet


snippet notin "not in " iA
\not\in 
endsnippet

context "math()"
snippet inn "in " iA
\in 
endsnippet

snippet NN "n" iA
\N
endsnippet

snippet Nn "cap" iA
\cap 
endsnippet

snippet UU "cup" iA
\cup 
endsnippet

snippet uuu "bigcup" iA
\displaystyle\bigcup_{${1:i \in ${2: I}}} $0
endsnippet

snippet nnn "bigcap" iA
\displaystyle\bigcap_{${1:i \in ${2: I}}} $0
endsnippet

snippet OO "emptyset" iA
\emptyset
endsnippet

snippet RR "real" iA
\R
endsnippet

snippet QQ "Q" iA
\Q
endsnippet

snippet ZZ "Z" iA
\Z
endsnippet

snippet GG "cal G" iA 
\mathcal{G}$0 
endsnippet

snippet <! "normal" iA
\triangleleft 
endsnippet

snippet <> "hokje" iA
\diamond 
endsnippet


context "math()"
snippet '(?<!i)sts' "text subscript" irA
_\text{$1} $0
endsnippet

context "math()"
snippet tt "text" iA
\text{$1}$0
endsnippet

context "math()"
snippet case "cases" wA
\begin{cases}
	$1
\end{cases}
endsnippet

snippet SI "SI" iA
\SI{$1}{$2}
endsnippet

snippet bigfun "Big function" iA
\begin{align*}
	$1: $2 &\longrightarrow $3 \\\\
	$4 &\longmapsto $1($4) = $0
.\end{align*}
endsnippet

snippet cvec "column vector" iA
\begin{pmatrix} ${1:x}_${2:1}\\\\ \vdots\\\\ $1_${2:n} \end{pmatrix}
endsnippet

priority 10
context "math()"
snippet "bar" "bar" riA
\overline{$1}$0
endsnippet

priority 100
context "math()"
snippet "([a-zA-Z])bar" "bar" riA
\overline{`!p snip.rv=match.group(1)`}
endsnippet

snippet letw "let omega" iA
Let $\Omega \subset \C$ be open.
endsnippet

context math()
snippet "([a-zA-Z])eps" "epsilon" rA
`!p snip.rv=match.group(1)`\epsilon
endsnippet

snippet HH "H" iA
\mathbb{H}
endsnippet

snippet DD "D" iA
\mathbb{D}
endsnippet



snippet __ "subscript" iA
_{$1}$0
endsnippet

snippet ooo "\infty" iA
\infty
endsnippet

snippet rij "mrij" i
(${1:x}_${2:n})_{${3:$2}\\in${4:\\N}}$0
endsnippet

snippet <= "leq" iA
\le 
endsnippet

snippet >= "geq" iA
\ge 
endsnippet

context "math()"
snippet EE "geq" iA
\exists 
endsnippet

context "math()"
snippet AA "forall" iA
\forall 
endsnippet

context "math()"
snippet xnn "xn" iA
x_{n}
endsnippet

context "math()"
snippet ynn "yn" iA
y_{n}
endsnippet


context "math()"
snippet xii "xi" iA
x_{i}
endsnippet

context "math()"
snippet yii "yi" iA
y_{i}
endsnippet

context "math()"
snippet xjj "xj" iA
x_{j}
endsnippet

context "math()"
snippet yjj "yj" iA
y_{j}
endsnippet

context "math()"
snippet xp1 "x" iA
x_{n+1}
endsnippet

context "math()"
snippet xmm "x" iA
x_{m}
endsnippet

snippet R0+ "R0+" iA
\\R_0^+
endsnippet

snippet plot "Plot" w
\begin{figure}[$1]
	\centering
	\begin{tikzpicture}
		\begin{axis}[
			xmin= ${2:-10}, xmax= ${3:10},
			ymin= ${4:-10}, ymax = ${5:10},
			axis lines = middle,
		]
			\addplot[domain=$2:$3, samples=${6:100}]{$7};
		\end{axis}
	\end{tikzpicture}
	\caption{$8}
	\label{${9:$8}}
\end{figure}
endsnippet

snippet nn "Tikz node" w
\node[$5] (${1/[^0-9a-zA-Z]//g}${2}) ${3:at (${4:0,0}) }{$${1}$};
$0
endsnippet
